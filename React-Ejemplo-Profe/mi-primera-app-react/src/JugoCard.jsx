import './JugoCard.css'

const JugoCard = ({ 
  jugo, 
  index = null, 
  showMedalla = false, 
  showAllReviews = false 
}) => {
  // Funci√≥n para calcular promedio de puntuaciones
  const calcularPromedio = (rese√±as) => {
    if (rese√±as.length === 0) return 0
    const suma = rese√±as.reduce((acc, rese√±a) => acc + rese√±a.puntuacion, 0)
    return (suma / rese√±as.length).toFixed(1)
  }

  // Obtener medalla seg√∫n el √≠ndice
  const obtenerMedalla = (indice) => {
    switch (indice) {
      case 0: return 'ü•á '
      case 1: return 'ü•à '
      case 2: return 'ü•â '
      default: return ''
    }
  }

  // Determinar qu√© rese√±as mostrar
  const rese√±asAMostrar = showAllReviews ? jugo.rese√±as : jugo.rese√±as.slice(0, 1)

  return (
    <div className="jugo-card">
      <div className="jugo-header">
        <h2>
          {showMedalla && index !== null && obtenerMedalla(index)}
          {jugo.nombre}
        </h2>
        <span className="precio">${jugo.precio}</span>
      </div>
      
      <p className="descripcion">{jugo.descripcion}</p>
      
      <div className="rating">
        <span className="promedio">‚≠ê {calcularPromedio(jugo.rese√±as)}</span>
        <span className="total-rese√±as">({jugo.rese√±as.length} rese√±as)</span>
      </div>

      <div className="rese√±as">
        <h4>
          {showAllReviews ? 'Rese√±as:' : 'Rese√±as destacadas:'}
        </h4>
        {rese√±asAMostrar.map((rese√±a, rese√±aIndex) => (
          <div key={rese√±aIndex} className="rese√±a">
            <div className="rese√±a-header">
              <strong>{rese√±a.usuario}</strong>
              <span className="puntuacion">
                {'‚≠ê'.repeat(rese√±a.puntuacion)}
              </span>
            </div>
            <p className="comentario">"{rese√±a.comentario}"</p>
          </div>
        ))}
      </div>
    </div>
  )
}

export default JugoCard